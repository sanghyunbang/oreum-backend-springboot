spring.application.name=oreum-backend-springboot

# 외부 API 사용
# external.kma.key=Rx9Ez4voG7r9hAZRsYbX7gOcZ3rNA678Jw2Pg4weTBf5HonR6GNR6vqhCaIjy5HPXceLoHxw6KuZrzg0yAjmhw==
external.kma.key=-lGWcbEcRbSRlnGxHKW08w
external.kakao.rest.key=717c9fa81d96369434f9f8b8acdb9d0e


# 🔥 Spring Security 기본 로그인 계정 생성을 방지
spring.security.user.name=none
spring.security.user.password=none
server.port=8080
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# DB 접속 정보
spring.datasource.url=jdbc:mysql://localhost:3306/oreum_test
spring.datasource.username=root
spring.datasource.password=himedia
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 명시적으로 HTTP만 사용하도록 설정 (개발 환경용)
server.ssl.enabled=false
server.http2.enabled=false

# MyBatis 설정
mybatis.mapper-locations=classpath:mybatis/mapper/**/*.xml
# mybatis.type-aliases-package=com.oreum.auth.dto
mybatis.configuration.map-underscore-to-camel-case=true

#--------------------------------------------------------------------------------------------------------

# Google
# registration
spring.security.oauth2.client.registration.google.client-id=524271187134-kp14qjns1pe8k4c80ndcaic9kmfcfibp.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.client-name=Google
# provider 생략 가능 (Spring이 자동 인식)

#-------------------------------------------------------------------------------------------------------

# KAKAO
# registration
spring.security.oauth2.client.registration.kakao.client-id=카카오-REST-API-키
spring.security.oauth2.client.registration.kakao.client-secret=카카오-시크릿 (없으면 생략 가능)
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

#-------------------------------------------------------------------------------------------------------

# NAVER
# registration
spring.security.oauth2.client.registration.naver.client-id=7Cbn8Dac0nlWMGBVvlnI
spring.security.oauth2.client.registration.naver.client-secret=QOrserrhFJ
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


#JWT 관련
spring.jwt.secret=super-secret-key-that-is-long-enough-to-sign-jwt-dtO8hDX6EGZgZdzafFmmwpV2gtQ4eY

#--------------------------------------------------------------------------------------------------------

#이메일 번호 관련
spring.mail.host=smtp.naver.com
spring.mail.port=465
spring.mail.username=mm2068@naver.com
spring.mail.password=GFF3DXG6KXXH
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.default-encoding=UTF-8

#----------------------------------------------------------------------------------------------------------

# AWS credentials
cloud.aws.credentials.access-key=AKIAUQ4L3CTHPQ6LI5YL
cloud.aws.credentials.secret-key=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

# AWS region
cloud.aws.region.static=ap-northeast-2

# S3 bucket
cloud.aws.s3.bucket=himedia-final-oreum-media-1353


# AWS CloudFront관련 설정
cloud.aws.cloudfront.domain=https://d3e2nelhqtdozh.cloudfront.net


# Multipart settings
spring.web.resources.static-locations=file:/C:/upload/
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

debug=true

# Redis관련 설정
spring.redis.host=localhost
spring.redis.port=6379

# MongoDB관련 설정
spring.data.mongodb.uri=mongodb://localhost:27017/himedia_oreum