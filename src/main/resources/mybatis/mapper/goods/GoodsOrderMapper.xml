<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN"
"file:///C:/Users/805-01/eclipse-workspace/padd/src/main/resources/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oreum.goods.dao.GoodsOrderDAO">
	<resultMap id="GoodsOrderWithItemsMap" type="com.oreum.goods.dto.GoodsOrderDTO">
	    <id property="order_id" column="order_id"/>
	    <result property="userId" column="user_id"/>
	    <result property="addressname" column="addressname"/>
	    <result property="addressnumber" column="addressnumber"/>
	    <result property="zipcode" column="zipcode"/>
	    <result property="addressbasic" column="addressbasic"/>
	    <result property="addressdetail" column="addressdetail"/>
	    <result property="request" column="request"/>
	    <result property="point" column="point"/>
	    <result property="total" column="total"/>
	    <result property="status" column="status"/>
	    <result property="ordered_at" column="ordered_at"/>
	    
	    <collection property="items" ofType="com.oreum.goods.dto.OrderItemDTO">
	        <id property="order_item_id" column="order_item_id"/>
	        <result property="goods_id" column="goods_id" />
	        <result property="goods_options_id" column="goods_options_id"/>
	        <result property="qty" column="qty"/>
	        <result property="item_price" column="item_price"/>
	        <result property="goods_name" column="goods_name"/>
	        <result property="brand" column="brand"/>
	        <result property="img" column="img"/>
	        <result property="option_name" column="option_name"/>
	        <result property="reviewWritten" column="review_written" />
	    </collection>
	</resultMap>
	
	<select id="findDeliveryList" resultMap="GoodsOrderWithItemsMap">
	    SELECT o.order_id, o.user_id, o.receiver_name AS addressname, o.receiver_phone AS addressnumber,
	           o.zipcode, o.address_basic AS addressbasic, o.address_detail AS addressdetail,
	           o.request, o.used_point AS point, o.total_price AS total, o.status, o.ordered_at,
	           oi.order_item_id, oi.goods_options_id, oi.qty, oi.item_price,
	           g.id AS goods_id, g.name AS goods_name, g.brand, g.img, go.option_name, 
	           CASE WHEN EXISTS (SELECT 1 FROM reviews r WHERE r.order_item_id = oi.order_item_id) THEN TRUE ELSE FALSE END AS review_written 
	           <!-- 각 order_item_id에 대해 리뷰 존재 여부 추가 -->
	    FROM orders o
	    JOIN order_items oi ON o.order_id = oi.order_id
	    JOIN GoodsOptions go ON oi.goods_options_id = go.id
	    JOIN goods g ON go.goods_id = g.id
	    WHERE o.user_id = 1 AND o.status IN ('결제완료', '배송중', '배송완료','결제취소')
	    ORDER BY o.ordered_at DESC
	</select>
	<update id="updateReview" parameterType="int">
		UPDATE order_items
		SET review_written = TRUE
		WHERE order_item_id = #{orderItemId};
	</update>

	<insert id="addOrder" parameterType="com.oreum.goods.dto.GoodsOrderDTO" useGeneratedKeys="true" keyProperty="order_id">
		insert into orders (user_id, receiver_name, receiver_phone, zipcode, address_basic, address_detail, request, used_point, total_price, status)
		values (#{userId}, #{addressname}, #{addressnumber}, #{zipcode}, #{addressbasic}, #{addressdetail}, #{request}, #{point}, #{total}, "결제완료")
	</insert>
	<insert id="addItemOrder" parameterType="java.util.List">
	  	insert into order_items (order_id, goods_options_id, qty, item_price)
	  	values
	  <foreach collection="items" item="item" separator=",">
	    (#{item.order_id}, #{item.goods_options_id}, #{item.qty}, #{item.item_price})
	  </foreach>
	</insert>
	<update id="cancelOrder">
		UPDATE orders SET status = "결제취소" WHERE order_id = #{id}
	</update>
	<update id="updatePoints">
		UPDATE users SET points = points-#{point}
	</update>
</mapper>