<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oreum.community.mapper.communityMapper">
    <!-- 커뮤니티 정보 by 커뮤니티 이름 -->
    <select id="getCommunity" parameterType="string" resultType="com.oreum.community.dto.communityDTO">
        SELECT
            b.board_id AS boardId,
            b.title,
            b.description,
            b.creator_id AS creatorId,
            u.nickname AS creatorNickname,
            b.thumbnail_url AS thumbnailUrl,
            b.is_private AS isPrivate,
            b.created_at AS createdAt,
            b.updated_at AS updatedAt
        FROM boards b
        JOIN users u ON b.creator_id = u.user_id
        WHERE b.title = #{title}
    </select>
<select id="getAllCommunities" resultType="com.oreum.community.dto.communityDTO">
  SELECT
    board_id AS boardId,
    title,
    description,
    creator_id AS creatorId,
    thumbnail_url AS thumbnailUrl,
    is_private AS isPrivate,
    created_at AS createdAt,
    updated_at AS updatedAt
  FROM boards
</select>
<insert id="insertCommunity" parameterType="com.oreum.community.dto.communityDTO">
    INSERT INTO boards
    (title, description, creator_id, thumbnail_url, is_private, created_at, updated_at)
    VALUES
    (#{title}, #{description}, #{creatorId}, #{thumbnailUrl}, #{isPrivate}, #{createdAt}, #{updatedAt});
</insert>

<insert id="insertFeed">
  INSERT INTO feedname (userId, name)
  VALUES (#{userId}, #{feedname});
</insert>
<insert id="insertFeedBoard">
  INSERT INTO myfeed (feedId, userId, boardId)
  VALUES (#{feedId}, #{userId}, #{boardId});
</insert>
<select id="getFeedNameById" resultType="Integer">
select feedId from feedname where name = #{feedname}
</select>
<select id="getFeedsByUserId" parameterType="int" resultType="com.oreum.posts.dto.MyFeedDTO">
  SELECT
    feedId AS id,
    name AS feedname,
    userId
  FROM feedname
  WHERE userId = #{userId}
</select>
<select id="getFeedIdByuserId" >
select userId from feedname where name=#{feedname}
</select>
<select id="getfeedIdByuserId2" >
select feedId from feedname where name=#{feedname}
</select>
<select id="getBoardIdsByuserId">
select boardId from myfeed where userId = #{userId} AND feedId = #{feedId}
</select>
<select id="getBoardIdByFindposts">
SELECT 
    p.post_id AS postId,
    p.user_id AS userId,
    u.nickname AS nickname,
    p.board_id AS boardId,
    p.type,
    p.title,
    p.content,
    p.like_count AS likeCount,
    p.comment_count AS commentCount,
    p.is_deleted AS isDeleted,
    p.created_at AS createdAt,
    p.updated_at AS updatedAt
  FROM posts p
  JOIN users u ON p.user_id = u.user_id
  where board_id = #{boardId}
</select>
<select id="testcall" parameterType="int" resultType="com.oreum.posts.dto.PostsDTO">
select 
	p.post_id AS postId,
    p.user_id AS userId,
    u.nickname AS nickname,
    p.board_id AS boardId,
    p.type,
    p.title,
    p.content,
    p.like_count AS likeCount,
    p.comment_count AS commentCount,
    p.is_deleted AS isDeleted,
    p.created_at AS createdAt,
    p.updated_at AS updatedAt
  FROM posts p
  JOIN users u ON p.user_id = u.user_id
  where board_id = #{boardId}
</select>


  <!-- 커뮤니티 제목으로 board_id 찾기 -->
  <select id="getBoardIdByTitle" resultType="int">
    SELECT board_id FROM boards WHERE title = #{title}
  </select>

  <!-- 가입 정보 저장 -->
  <insert id="insertMyCommunity">
    INSERT INTO my_community (board_id, user_id)
    VALUES (#{boardId}, #{userId})
  </insert>

<select id="getTitlesByUserId" parameterType="int" resultType="string">
  SELECT b.title
  FROM my_community mc
  JOIN boards b ON mc.board_id = b.board_id
  WHERE mc.user_id = #{userId}
</select>

<delete id="leaveCommunity">
  DELETE FROM my_community
  WHERE user_id = #{userId}
    AND board_id = (
      SELECT board_id FROM boards WHERE title = #{communityTitle}
    )
</delete>


</mapper>
